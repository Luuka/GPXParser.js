let gpxParser=function(){this.xmlSource="",this.metadata={},this.waypoints=[],this.tracks=[],this.routes=[]};gpxParser.prototype.parse=function(e){let t=this,l=new window.DOMParser;this.xmlSource=l.parseFromString(e,"text/xml");let a=this.xmlSource.querySelector("metadata");if(null!=a){this.metadata.name=this.getElementValue(a,"name"),this.metadata.desc=this.getElementValue(a,"desc"),this.metadata.time=this.getElementValue(a,"time");let e={},t=a.querySelector("author");if(null!=t){e.name=this.getElementValue(t,"name"),e.email={};let l=t.querySelector("email");null!=l&&(e.email.id=l.getAttribute("id"),e.email.domain=l.getAttribute("domain"));let a={},r=t.querySelector("link");null!=r&&(a.href=r.getAttribute("href"),a.text=this.getElementValue(r,"text"),a.type=this.getElementValue(r,"type")),e.link=a}this.metadata.author=e;let l={},r=this.queryDirectSelector(a,"link");null!=r&&(l.href=r.getAttribute("href"),l.text=this.getElementValue(r,"text"),l.type=this.getElementValue(r,"type"),this.metadata.link=l)}var r=[].slice.call(this.xmlSource.querySelectorAll("wpt"));for(let e in r){const l=r[e];let a={};a.name=t.getElementValue(l,"name"),a.sym=t.getElementValue(l,"sym"),a.lat=parseFloat(l.getAttribute("lat")),a.lon=parseFloat(l.getAttribute("lon"));let n=parseFloat(t.getElementValue(l,"ele"));a.ele=isNaN(n)?null:n,a.cmt=t.getElementValue(l,"cmt"),a.desc=t.getElementValue(l,"desc");let s=t.getElementValue(l,"time");a.time=null==s?null:new Date(s),t.waypoints.push(a)}var n=[].slice.call(this.xmlSource.querySelectorAll("rte"));for(let e in n){const l=n[e];let a={};a.name=t.getElementValue(l,"name"),a.cmt=t.getElementValue(l,"cmt"),a.desc=t.getElementValue(l,"desc"),a.src=t.getElementValue(l,"src"),a.number=t.getElementValue(l,"number");const r=t.queryDirectSelector(l,"type");a.type=null!=r?r.innerHTML:null;let s={};const o=l.querySelector("link");null!=o&&(s.href=o.getAttribute("href"),s.text=t.getElementValue(o,"text"),s.type=t.getElementValue(o,"type")),a.link=s;let i=[];const u=[].slice.call(l.querySelectorAll("rtept"));for(let e in u){const l=u[e];let a={};a.lat=parseFloat(l.getAttribute("lat")),a.lon=parseFloat(l.getAttribute("lon"));let r=parseFloat(t.getElementValue(l,"ele"));a.ele=isNaN(r)?null:r;let n=t.getElementValue(l,"time");a.time=null==n?null:new Date(n),i.push(a)}a.distance=t.calculDistance(i),a.elevation=t.calcElevation(i),a.slopes=t.calculSlope(i,a.distance.cumul),a.points=i,t.routes.push(a)}const s=[].slice.call(this.xmlSource.querySelectorAll("trk"));for(let e in s){const l=s[e];let a={};a.name=t.getElementValue(l,"name"),a.cmt=t.getElementValue(l,"cmt"),a.desc=t.getElementValue(l,"desc"),a.src=t.getElementValue(l,"src"),a.number=t.getElementValue(l,"number");const r=t.queryDirectSelector(l,"type");a.type=null!=r?r.innerHTML:null;let n={};const o=l.querySelector("link");null!=o&&(n.href=o.getAttribute("href"),n.text=t.getElementValue(o,"text"),n.type=t.getElementValue(o,"type")),a.link=n;let i=[];const u=[].slice.call(l.querySelectorAll("trkpt"));for(let e in u){const l=u[e];let a={};a.lat=parseFloat(l.getAttribute("lat")),a.lon=parseFloat(l.getAttribute("lon"));const r=parseFloat(t.getElementValue(l,"ele"));a.ele=isNaN(r)?null:r;const n=t.getElementValue(l,"time");if(a.time=null==n?null:new Date(n),t.getElementValue(l,"extensions")){const e=t.getElementValue(l,"temp"),r=t.getElementValue(l,"hr"),n=t.getElementValue(l,"cad"),s=t.getElementValue(l,"course"),o=t.getElementValue(l,"speed"),i=t.getElementValue(l,"roc"),u=t.getElementValue(l,"distance");null!==e&&(a.temp=parseFloat(e)),null!==r&&(a.hr=parseFloat(r)),null!==n&&(a.cad=parseFloat(n)),null!==s&&(a.course=parseFloat(s)),null!==o&&(a.speed=parseFloat(o)),null!==i&&(a.roc=parseFloat(i)),null!==u&&(a.distance=parseFloat(u))}i.push(a)}a.distance=t.calculDistance(i),a.elevation=t.calcElevation(i),a.slopes=t.calculSlope(i,a.distance.cumul),a.points=i,t.tracks.push(a)}},gpxParser.prototype.getElementValue=function(e,t){let l=e.querySelector(t);return null!=l?null!=l.innerHTML?l.innerHTML:l.childNodes[0].data:l},gpxParser.prototype.queryDirectSelector=function(e,t){let l=e.querySelectorAll(t),a=l[0];if(l.length>1){let l=e.childNodes;for(idx in l)elem=l[idx],elem.tagName===t&&(a=elem)}return a},gpxParser.prototype.calculDistance=function(e){let t={},l=0,a=[];for(var r=0;r<e.length-1;r++)l+=this.calcDistanceBetween(e[r],e[r+1]),a[r]=l;return a[e.length-1]=l,t.total=l,t.cumul=a,t},gpxParser.prototype.calcDistanceBetween=function(e,t){let l={};l.lat=e.lat,l.lon=e.lon;let a={};a.lat=t.lat,a.lon=t.lon;var r=Math.PI/180,n=l.lat*r,s=a.lat*r,o=Math.sin((a.lat-l.lat)*r/2),i=Math.sin((a.lon-l.lon)*r/2),u=o*o+Math.cos(n)*Math.cos(s)*i*i;return 6371e3*(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)))},gpxParser.prototype.calcElevation=function(e){for(var t=0,l=0,a={},r=0;r<e.length-1;r++){let a=e[r+1].ele,n=e[r].ele;if(null!==a&&null!==n){let e=parseFloat(a)-parseFloat(n);e<0?l+=e:e>0&&(t+=e)}}for(var n=[],s=0,o=(r=0,e.length);r<o;r++){if(null!==e[r].ele){var i=parseFloat(e[r].ele);n.push(i),s+=i}}return a.max=Math.max.apply(null,n)||null,a.min=Math.min.apply(null,n)||null,a.pos=Math.abs(t)||null,a.neg=Math.abs(l)||null,a.avg=s/n.length||null,a},gpxParser.prototype.calculSlope=function(e,t){let l=[];for(var a=0;a<e.length-1;a++){let r=e[a],n=100*(e[a+1].ele-r.ele)/(t[a+1]-t[a]);l.push(n)}return l},gpxParser.prototype.toGeoJSON=function(){let e={type:"FeatureCollection",features:[],properties:{name:this.metadata.name,desc:this.metadata.desc,time:this.metadata.time,author:this.metadata.author,link:this.metadata.link}};for(let t in this.tracks){const a=this.tracks[t];(l={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}}).properties.name=a.name,l.properties.cmt=a.cmt,l.properties.desc=a.desc,l.properties.src=a.src,l.properties.number=a.number,l.properties.link=a.link,l.properties.type=a.type;for(let e in a.points){const t=a.points[e];let r=[];r.push(t.lon),r.push(t.lat),r.push(t.ele),l.geometry.coordinates.push(r)}e.features.push(l)}for(let a in this.routes){const r=this.routes[a];(l={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}}).properties.name=r.name,l.properties.cmt=r.cmt,l.properties.desc=r.desc,l.properties.src=r.src,l.properties.number=r.number,l.properties.link=r.link,l.properties.type=r.type;for(let e in r.points){const a=r.points[e];var t=[];t.push(a.lon),t.push(a.lat),t.push(a.ele),l.geometry.coordinates.push(t)}e.features.push(l)}for(let t in this.waypoints){const a=this.waypoints[t];var l;(l={type:"Feature",geometry:{type:"Point",coordinates:[]},properties:{}}).properties.name=a.name,l.properties.sym=a.sym,l.properties.cmt=a.cmt,l.properties.desc=a.desc,l.geometry.coordinates=[a.lon,a.lat,a.ele],e.features.push(l)}return e},"undefined"!=typeof module&&(require("jsdom-global")(),module.exports=gpxParser);